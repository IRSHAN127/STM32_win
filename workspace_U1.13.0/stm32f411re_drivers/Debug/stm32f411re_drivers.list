
stm32f411re_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000007ec  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000984  0800098c  0001098c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000984  08000984  0001098c  2**0
                  CONTENTS
  4 .ARM          00000000  08000984  08000984  0001098c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000984  0800098c  0001098c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000984  08000984  00010984  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000988  08000988  00010988  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001098c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800098c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800098c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001098c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000109bc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a37  00000000  00000000  000109ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002cc  00000000  00000000  00011436  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00011708  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  000117d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001edd  00000000  00000000  0001185c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000104d  00000000  00000000  00013739  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008c93  00000000  00000000  00014786  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000288  00000000  00000000  0001d41c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006b  00000000  00000000  0001d6a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800096c 	.word	0x0800096c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	0800096c 	.word	0x0800096c

080001d8 <delay>:



void delay(uint32_t Delay)

{
 80001d8:	b480      	push	{r7}
 80001da:	b085      	sub	sp, #20
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]

for(uint32_t i = 0 ; i < Delay ; i ++);
 80001e0:	2300      	movs	r3, #0
 80001e2:	60fb      	str	r3, [r7, #12]
 80001e4:	e002      	b.n	80001ec <delay+0x14>
 80001e6:	68fb      	ldr	r3, [r7, #12]
 80001e8:	3301      	adds	r3, #1
 80001ea:	60fb      	str	r3, [r7, #12]
 80001ec:	68fa      	ldr	r2, [r7, #12]
 80001ee:	687b      	ldr	r3, [r7, #4]
 80001f0:	429a      	cmp	r2, r3
 80001f2:	d3f8      	bcc.n	80001e6 <delay+0xe>

}
 80001f4:	bf00      	nop
 80001f6:	bf00      	nop
 80001f8:	3714      	adds	r7, #20
 80001fa:	46bd      	mov	sp, r7
 80001fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000200:	4770      	bx	lr
	...

08000204 <main>:



int main(void)

{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0

GPIO_Handle_t GpioLed ,GpioBtn;

memset(&GpioLed,0,sizeof(GpioLed));
 800020a:	f107 030c 	add.w	r3, r7, #12
 800020e:	220c      	movs	r2, #12
 8000210:	2100      	movs	r1, #0
 8000212:	4618      	mov	r0, r3
 8000214:	f000 fb7e 	bl	8000914 <memset>

memset(&GpioBtn,0,sizeof(GpioBtn));
 8000218:	463b      	mov	r3, r7
 800021a:	220c      	movs	r2, #12
 800021c:	2100      	movs	r1, #0
 800021e:	4618      	mov	r0, r3
 8000220:	f000 fb78 	bl	8000914 <memset>



GpioLed.pGPIOx=GPIOA;
 8000224:	4b17      	ldr	r3, [pc, #92]	; (8000284 <main+0x80>)
 8000226:	60fb      	str	r3, [r7, #12]

GpioLed.GPIO_PinConfig.GPIO_PinNumber= GPIO_PIN_NO_5;
 8000228:	2305      	movs	r3, #5
 800022a:	743b      	strb	r3, [r7, #16]

GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800022c:	2301      	movs	r3, #1
 800022e:	747b      	strb	r3, [r7, #17]

GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000230:	2300      	movs	r3, #0
 8000232:	74bb      	strb	r3, [r7, #18]

GpioLed.GPIO_PinConfig.GPIO_PinOType = GPIO_OP_TYPE_PP;
 8000234:	2300      	movs	r3, #0
 8000236:	753b      	strb	r3, [r7, #20]

GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000238:	2300      	movs	r3, #0
 800023a:	74fb      	strb	r3, [r7, #19]



GPIO_PeriClockControl(GPIOA, ENABLE);
 800023c:	2101      	movs	r1, #1
 800023e:	4811      	ldr	r0, [pc, #68]	; (8000284 <main+0x80>)
 8000240:	f000 f860 	bl	8000304 <GPIO_PeriClockControl>



GPIO_Init(&GpioLed);
 8000244:	f107 030c 	add.w	r3, r7, #12
 8000248:	4618      	mov	r0, r3
 800024a:	f000 f8fb 	bl	8000444 <GPIO_Init>



GpioBtn.pGPIOx=GPIOD;
 800024e:	4b0e      	ldr	r3, [pc, #56]	; (8000288 <main+0x84>)
 8000250:	603b      	str	r3, [r7, #0]

GpioBtn.GPIO_PinConfig.GPIO_PinNumber= GPIO_PIN_NO_2;
 8000252:	2302      	movs	r3, #2
 8000254:	713b      	strb	r3, [r7, #4]

GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000256:	2304      	movs	r3, #4
 8000258:	717b      	strb	r3, [r7, #5]

GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800025a:	2302      	movs	r3, #2
 800025c:	71bb      	strb	r3, [r7, #6]

GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 800025e:	2301      	movs	r3, #1
 8000260:	71fb      	strb	r3, [r7, #7]



GPIO_PeriClockControl(GPIOD, ENABLE);
 8000262:	2101      	movs	r1, #1
 8000264:	4808      	ldr	r0, [pc, #32]	; (8000288 <main+0x84>)
 8000266:	f000 f84d 	bl	8000304 <GPIO_PeriClockControl>



GPIO_Init(&GpioBtn);
 800026a:	463b      	mov	r3, r7
 800026c:	4618      	mov	r0, r3
 800026e:	f000 f8e9 	bl	8000444 <GPIO_Init>



//IRQ Configuration

GPIO_IRQPriorityConfig(IRQ_NO_EXTI2, NVIC_IRQ_PRIORITY_15);
 8000272:	210f      	movs	r1, #15
 8000274:	2008      	movs	r0, #8
 8000276:	f000 fb03 	bl	8000880 <GPIO_IRQPriorityConfig>

GPIO_IRQInterruptConfig(IRQ_NO_EXTI2, ENABLE);
 800027a:	2101      	movs	r1, #1
 800027c:	2008      	movs	r0, #8
 800027e:	f000 fa79 	bl	8000774 <GPIO_IRQInterruptConfig>



while(1);
 8000282:	e7fe      	b.n	8000282 <main+0x7e>
 8000284:	40020000 	.word	0x40020000
 8000288:	40020c00 	.word	0x40020c00

0800028c <EXTI2_IRQHandler>:



void EXTI2_IRQHandler(void)

{
 800028c:	b580      	push	{r7, lr}
 800028e:	af00      	add	r7, sp, #0

delay(2000000);
 8000290:	4805      	ldr	r0, [pc, #20]	; (80002a8 <EXTI2_IRQHandler+0x1c>)
 8000292:	f7ff ffa1 	bl	80001d8 <delay>

GPIO_IRQHandling(GPIO_PIN_NO_2);
 8000296:	2002      	movs	r0, #2
 8000298:	f000 fb1c 	bl	80008d4 <GPIO_IRQHandling>



GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800029c:	2105      	movs	r1, #5
 800029e:	4803      	ldr	r0, [pc, #12]	; (80002ac <EXTI2_IRQHandler+0x20>)
 80002a0:	f000 fa52 	bl	8000748 <GPIO_ToggleOutputPin>



}
 80002a4:	bf00      	nop
 80002a6:	bd80      	pop	{r7, pc}
 80002a8:	001e8480 	.word	0x001e8480
 80002ac:	40020000 	.word	0x40020000

080002b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002b0:	480d      	ldr	r0, [pc, #52]	; (80002e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002b2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002b4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b8:	480c      	ldr	r0, [pc, #48]	; (80002ec <LoopForever+0x6>)
  ldr r1, =_edata
 80002ba:	490d      	ldr	r1, [pc, #52]	; (80002f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002bc:	4a0d      	ldr	r2, [pc, #52]	; (80002f4 <LoopForever+0xe>)
  movs r3, #0
 80002be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002c0:	e002      	b.n	80002c8 <LoopCopyDataInit>

080002c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c6:	3304      	adds	r3, #4

080002c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002cc:	d3f9      	bcc.n	80002c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ce:	4a0a      	ldr	r2, [pc, #40]	; (80002f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002d0:	4c0a      	ldr	r4, [pc, #40]	; (80002fc <LoopForever+0x16>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d4:	e001      	b.n	80002da <LoopFillZerobss>

080002d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d8:	3204      	adds	r2, #4

080002da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002dc:	d3fb      	bcc.n	80002d6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002de:	f000 fb21 	bl	8000924 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002e2:	f7ff ff8f 	bl	8000204 <main>

080002e6 <LoopForever>:

LoopForever:
  b LoopForever
 80002e6:	e7fe      	b.n	80002e6 <LoopForever>
  ldr   r0, =_estack
 80002e8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002f0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f4:	0800098c 	.word	0x0800098c
  ldr r2, =_sbss
 80002f8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002fc:	2000001c 	.word	0x2000001c

08000300 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000300:	e7fe      	b.n	8000300 <ADC_IRQHandler>
	...

08000304 <GPIO_PeriClockControl>:
 *
 *	@Note				- none
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx,uint8_t EnOrDi)
{
 8000304:	b480      	push	{r7}
 8000306:	b083      	sub	sp, #12
 8000308:	af00      	add	r7, sp, #0
 800030a:	6078      	str	r0, [r7, #4]
 800030c:	460b      	mov	r3, r1
 800030e:	70fb      	strb	r3, [r7, #3]

	if(EnOrDi == ENABLE)
 8000310:	78fb      	ldrb	r3, [r7, #3]
 8000312:	2b01      	cmp	r3, #1
 8000314:	d141      	bne.n	800039a <GPIO_PeriClockControl+0x96>
	{
		if(pGPIOx == GPIOA)
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a43      	ldr	r2, [pc, #268]	; (8000428 <GPIO_PeriClockControl+0x124>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d106      	bne.n	800032c <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800031e:	4b43      	ldr	r3, [pc, #268]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000322:	4a42      	ldr	r2, [pc, #264]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000324:	f043 0301 	orr.w	r3, r3, #1
 8000328:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
		{
			GPIOH_PCLK_DI();
		}
	}
}
 800032a:	e077      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB)
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	4a40      	ldr	r2, [pc, #256]	; (8000430 <GPIO_PeriClockControl+0x12c>)
 8000330:	4293      	cmp	r3, r2
 8000332:	d106      	bne.n	8000342 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000334:	4b3d      	ldr	r3, [pc, #244]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000336:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000338:	4a3c      	ldr	r2, [pc, #240]	; (800042c <GPIO_PeriClockControl+0x128>)
 800033a:	f043 0302 	orr.w	r3, r3, #2
 800033e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000340:	e06c      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC)
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4a3b      	ldr	r2, [pc, #236]	; (8000434 <GPIO_PeriClockControl+0x130>)
 8000346:	4293      	cmp	r3, r2
 8000348:	d106      	bne.n	8000358 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800034a:	4b38      	ldr	r3, [pc, #224]	; (800042c <GPIO_PeriClockControl+0x128>)
 800034c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034e:	4a37      	ldr	r2, [pc, #220]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000350:	f043 0304 	orr.w	r3, r3, #4
 8000354:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000356:	e061      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD)
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a37      	ldr	r2, [pc, #220]	; (8000438 <GPIO_PeriClockControl+0x134>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d106      	bne.n	800036e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000360:	4b32      	ldr	r3, [pc, #200]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000364:	4a31      	ldr	r2, [pc, #196]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000366:	f043 0308 	orr.w	r3, r3, #8
 800036a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036c:	e056      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE)
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	4a32      	ldr	r2, [pc, #200]	; (800043c <GPIO_PeriClockControl+0x138>)
 8000372:	4293      	cmp	r3, r2
 8000374:	d106      	bne.n	8000384 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000376:	4b2d      	ldr	r3, [pc, #180]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037a:	4a2c      	ldr	r2, [pc, #176]	; (800042c <GPIO_PeriClockControl+0x128>)
 800037c:	f043 0310 	orr.w	r3, r3, #16
 8000380:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000382:	e04b      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH)
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	4a2e      	ldr	r2, [pc, #184]	; (8000440 <GPIO_PeriClockControl+0x13c>)
 8000388:	4293      	cmp	r3, r2
 800038a:	d147      	bne.n	800041c <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_EN();
 800038c:	4b27      	ldr	r3, [pc, #156]	; (800042c <GPIO_PeriClockControl+0x128>)
 800038e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000390:	4a26      	ldr	r2, [pc, #152]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000392:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000396:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000398:	e040      	b.n	800041c <GPIO_PeriClockControl+0x118>
		if(pGPIOx == GPIOA)
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	4a22      	ldr	r2, [pc, #136]	; (8000428 <GPIO_PeriClockControl+0x124>)
 800039e:	4293      	cmp	r3, r2
 80003a0:	d106      	bne.n	80003b0 <GPIO_PeriClockControl+0xac>
			GPIOA_PCLK_DI();
 80003a2:	4b22      	ldr	r3, [pc, #136]	; (800042c <GPIO_PeriClockControl+0x128>)
 80003a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a6:	4a21      	ldr	r2, [pc, #132]	; (800042c <GPIO_PeriClockControl+0x128>)
 80003a8:	f023 0301 	bic.w	r3, r3, #1
 80003ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ae:	e035      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOB)
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	4a1f      	ldr	r2, [pc, #124]	; (8000430 <GPIO_PeriClockControl+0x12c>)
 80003b4:	4293      	cmp	r3, r2
 80003b6:	d106      	bne.n	80003c6 <GPIO_PeriClockControl+0xc2>
			GPIOB_PCLK_DI();
 80003b8:	4b1c      	ldr	r3, [pc, #112]	; (800042c <GPIO_PeriClockControl+0x128>)
 80003ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003bc:	4a1b      	ldr	r2, [pc, #108]	; (800042c <GPIO_PeriClockControl+0x128>)
 80003be:	f023 0302 	bic.w	r3, r3, #2
 80003c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c4:	e02a      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOC)
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	4a1a      	ldr	r2, [pc, #104]	; (8000434 <GPIO_PeriClockControl+0x130>)
 80003ca:	4293      	cmp	r3, r2
 80003cc:	d106      	bne.n	80003dc <GPIO_PeriClockControl+0xd8>
			GPIOC_PCLK_DI();
 80003ce:	4b17      	ldr	r3, [pc, #92]	; (800042c <GPIO_PeriClockControl+0x128>)
 80003d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d2:	4a16      	ldr	r2, [pc, #88]	; (800042c <GPIO_PeriClockControl+0x128>)
 80003d4:	f023 0304 	bic.w	r3, r3, #4
 80003d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003da:	e01f      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOD)
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	4a16      	ldr	r2, [pc, #88]	; (8000438 <GPIO_PeriClockControl+0x134>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d106      	bne.n	80003f2 <GPIO_PeriClockControl+0xee>
			GPIOD_PCLK_DI();
 80003e4:	4b11      	ldr	r3, [pc, #68]	; (800042c <GPIO_PeriClockControl+0x128>)
 80003e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e8:	4a10      	ldr	r2, [pc, #64]	; (800042c <GPIO_PeriClockControl+0x128>)
 80003ea:	f023 0308 	bic.w	r3, r3, #8
 80003ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f0:	e014      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOE)
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	4a11      	ldr	r2, [pc, #68]	; (800043c <GPIO_PeriClockControl+0x138>)
 80003f6:	4293      	cmp	r3, r2
 80003f8:	d106      	bne.n	8000408 <GPIO_PeriClockControl+0x104>
			GPIOE_PCLK_DI();
 80003fa:	4b0c      	ldr	r3, [pc, #48]	; (800042c <GPIO_PeriClockControl+0x128>)
 80003fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fe:	4a0b      	ldr	r2, [pc, #44]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000400:	f023 0310 	bic.w	r3, r3, #16
 8000404:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000406:	e009      	b.n	800041c <GPIO_PeriClockControl+0x118>
		else if(pGPIOx == GPIOH)
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	4a0d      	ldr	r2, [pc, #52]	; (8000440 <GPIO_PeriClockControl+0x13c>)
 800040c:	4293      	cmp	r3, r2
 800040e:	d105      	bne.n	800041c <GPIO_PeriClockControl+0x118>
			GPIOH_PCLK_DI();
 8000410:	4b06      	ldr	r3, [pc, #24]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000414:	4a05      	ldr	r2, [pc, #20]	; (800042c <GPIO_PeriClockControl+0x128>)
 8000416:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800041a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041c:	bf00      	nop
 800041e:	370c      	adds	r7, #12
 8000420:	46bd      	mov	sp, r7
 8000422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000426:	4770      	bx	lr
 8000428:	40020000 	.word	0x40020000
 800042c:	40023800 	.word	0x40023800
 8000430:	40020400 	.word	0x40020400
 8000434:	40020800 	.word	0x40020800
 8000438:	40020c00 	.word	0x40020c00
 800043c:	40021000 	.word	0x40021000
 8000440:	40021c00 	.word	0x40021c00

08000444 <GPIO_Init>:
 *
 *	@Note				- none
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000444:	b480      	push	{r7}
 8000446:	b087      	sub	sp, #28
 8000448:	af00      	add	r7, sp, #0
 800044a:	6078      	str	r0, [r7, #4]
	/*(40)*/
	uint32_t temp=0;
 800044c:	2300      	movs	r3, #0
 800044e:	617b      	str	r3, [r7, #20]
	//1. Config the mode of the GPIO pin

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <=GPIO_MODE_ANALOG)
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	795b      	ldrb	r3, [r3, #5]
 8000454:	2b03      	cmp	r3, #3
 8000456:	d81f      	bhi.n	8000498 <GPIO_Init+0x54>
		{
			temp=  pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	795b      	ldrb	r3, [r3, #5]
 800045c:	461a      	mov	r2, r3
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	791b      	ldrb	r3, [r3, #4]
 8000462:	005b      	lsls	r3, r3, #1
 8000464:	fa02 f303 	lsl.w	r3, r2, r3
 8000468:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->MODER &= ~(0X3 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	681a      	ldr	r2, [r3, #0]
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	791b      	ldrb	r3, [r3, #4]
 8000474:	4619      	mov	r1, r3
 8000476:	2303      	movs	r3, #3
 8000478:	408b      	lsls	r3, r1
 800047a:	43db      	mvns	r3, r3
 800047c:	4619      	mov	r1, r3
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	400a      	ands	r2, r1
 8000484:	601a      	str	r2, [r3, #0]

			pGPIOHandle->pGPIOx->MODER |= temp;
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	6819      	ldr	r1, [r3, #0]
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	697a      	ldr	r2, [r7, #20]
 8000492:	430a      	orrs	r2, r1
 8000494:	601a      	str	r2, [r3, #0]
 8000496:	e0b0      	b.n	80005fa <GPIO_Init+0x1b6>
		}
		else
		{
			// interrupt config
			if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	795b      	ldrb	r3, [r3, #5]
 800049c:	2b04      	cmp	r3, #4
 800049e:	d117      	bne.n	80004d0 <GPIO_Init+0x8c>
			{

				//1. configure the FTSR

				EXTI->FTSR |= (1<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004a0:	4b40      	ldr	r3, [pc, #256]	; (80005a4 <GPIO_Init+0x160>)
 80004a2:	68db      	ldr	r3, [r3, #12]
 80004a4:	687a      	ldr	r2, [r7, #4]
 80004a6:	7912      	ldrb	r2, [r2, #4]
 80004a8:	4611      	mov	r1, r2
 80004aa:	2201      	movs	r2, #1
 80004ac:	408a      	lsls	r2, r1
 80004ae:	4611      	mov	r1, r2
 80004b0:	4a3c      	ldr	r2, [pc, #240]	; (80005a4 <GPIO_Init+0x160>)
 80004b2:	430b      	orrs	r3, r1
 80004b4:	60d3      	str	r3, [r2, #12]

				// CLEARING THR RAISING CONFIG IF PREVIOUSLY SET

				EXTI->RTSR &= ~(1<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004b6:	4b3b      	ldr	r3, [pc, #236]	; (80005a4 <GPIO_Init+0x160>)
 80004b8:	689b      	ldr	r3, [r3, #8]
 80004ba:	687a      	ldr	r2, [r7, #4]
 80004bc:	7912      	ldrb	r2, [r2, #4]
 80004be:	4611      	mov	r1, r2
 80004c0:	2201      	movs	r2, #1
 80004c2:	408a      	lsls	r2, r1
 80004c4:	43d2      	mvns	r2, r2
 80004c6:	4611      	mov	r1, r2
 80004c8:	4a36      	ldr	r2, [pc, #216]	; (80005a4 <GPIO_Init+0x160>)
 80004ca:	400b      	ands	r3, r1
 80004cc:	6093      	str	r3, [r2, #8]
 80004ce:	e035      	b.n	800053c <GPIO_Init+0xf8>
			}
			else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	795b      	ldrb	r3, [r3, #5]
 80004d4:	2b05      	cmp	r3, #5
 80004d6:	d117      	bne.n	8000508 <GPIO_Init+0xc4>
			{
				//1. configure the RTSR

				EXTI->RTSR |= (1<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004d8:	4b32      	ldr	r3, [pc, #200]	; (80005a4 <GPIO_Init+0x160>)
 80004da:	689b      	ldr	r3, [r3, #8]
 80004dc:	687a      	ldr	r2, [r7, #4]
 80004de:	7912      	ldrb	r2, [r2, #4]
 80004e0:	4611      	mov	r1, r2
 80004e2:	2201      	movs	r2, #1
 80004e4:	408a      	lsls	r2, r1
 80004e6:	4611      	mov	r1, r2
 80004e8:	4a2e      	ldr	r2, [pc, #184]	; (80005a4 <GPIO_Init+0x160>)
 80004ea:	430b      	orrs	r3, r1
 80004ec:	6093      	str	r3, [r2, #8]

				// CLEARING THR RAISING CONFIG IF PREVIOUSLY SET

				EXTI->FTSR &= ~(1<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004ee:	4b2d      	ldr	r3, [pc, #180]	; (80005a4 <GPIO_Init+0x160>)
 80004f0:	68db      	ldr	r3, [r3, #12]
 80004f2:	687a      	ldr	r2, [r7, #4]
 80004f4:	7912      	ldrb	r2, [r2, #4]
 80004f6:	4611      	mov	r1, r2
 80004f8:	2201      	movs	r2, #1
 80004fa:	408a      	lsls	r2, r1
 80004fc:	43d2      	mvns	r2, r2
 80004fe:	4611      	mov	r1, r2
 8000500:	4a28      	ldr	r2, [pc, #160]	; (80005a4 <GPIO_Init+0x160>)
 8000502:	400b      	ands	r3, r1
 8000504:	60d3      	str	r3, [r2, #12]
 8000506:	e019      	b.n	800053c <GPIO_Init+0xf8>
			}
			else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	795b      	ldrb	r3, [r3, #5]
 800050c:	2b06      	cmp	r3, #6
 800050e:	d115      	bne.n	800053c <GPIO_Init+0xf8>
			{
						//1. configure the FTSR and RTSR
				EXTI->RTSR |= (1<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000510:	4b24      	ldr	r3, [pc, #144]	; (80005a4 <GPIO_Init+0x160>)
 8000512:	689b      	ldr	r3, [r3, #8]
 8000514:	687a      	ldr	r2, [r7, #4]
 8000516:	7912      	ldrb	r2, [r2, #4]
 8000518:	4611      	mov	r1, r2
 800051a:	2201      	movs	r2, #1
 800051c:	408a      	lsls	r2, r1
 800051e:	4611      	mov	r1, r2
 8000520:	4a20      	ldr	r2, [pc, #128]	; (80005a4 <GPIO_Init+0x160>)
 8000522:	430b      	orrs	r3, r1
 8000524:	6093      	str	r3, [r2, #8]

				// CLEARING THR RAISING CONFIG IF PREVIOUSLY SET

				EXTI->FTSR |= (1<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000526:	4b1f      	ldr	r3, [pc, #124]	; (80005a4 <GPIO_Init+0x160>)
 8000528:	68db      	ldr	r3, [r3, #12]
 800052a:	687a      	ldr	r2, [r7, #4]
 800052c:	7912      	ldrb	r2, [r2, #4]
 800052e:	4611      	mov	r1, r2
 8000530:	2201      	movs	r2, #1
 8000532:	408a      	lsls	r2, r1
 8000534:	4611      	mov	r1, r2
 8000536:	4a1b      	ldr	r2, [pc, #108]	; (80005a4 <GPIO_Init+0x160>)
 8000538:	430b      	orrs	r3, r1
 800053a:	60d3      	str	r3, [r2, #12]
			}

			//2.Config the gpio port  selection in syscfg_EXTICR
			//temp1 for finding which EXTICRx, temp1 for finding from which bit of of EXTICR[x] we have to write
			uint8_t temp1 = (uint8_t)((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) / 4);
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	791b      	ldrb	r3, [r3, #4]
 8000540:	089b      	lsrs	r3, r3, #2
 8000542:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = (uint8_t)((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) % 4);
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	791b      	ldrb	r3, [r3, #4]
 8000548:	f003 0303 	and.w	r3, r3, #3
 800054c:	74bb      	strb	r3, [r7, #18]

			uint8_t portcode =GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	4a15      	ldr	r2, [pc, #84]	; (80005a8 <GPIO_Init+0x164>)
 8000554:	4293      	cmp	r3, r2
 8000556:	d033      	beq.n	80005c0 <GPIO_Init+0x17c>
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	4a13      	ldr	r2, [pc, #76]	; (80005ac <GPIO_Init+0x168>)
 800055e:	4293      	cmp	r3, r2
 8000560:	d01d      	beq.n	800059e <GPIO_Init+0x15a>
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	4a12      	ldr	r2, [pc, #72]	; (80005b0 <GPIO_Init+0x16c>)
 8000568:	4293      	cmp	r3, r2
 800056a:	d016      	beq.n	800059a <GPIO_Init+0x156>
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	4a10      	ldr	r2, [pc, #64]	; (80005b4 <GPIO_Init+0x170>)
 8000572:	4293      	cmp	r3, r2
 8000574:	d00f      	beq.n	8000596 <GPIO_Init+0x152>
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	4a0f      	ldr	r2, [pc, #60]	; (80005b8 <GPIO_Init+0x174>)
 800057c:	4293      	cmp	r3, r2
 800057e:	d008      	beq.n	8000592 <GPIO_Init+0x14e>
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	4a0d      	ldr	r2, [pc, #52]	; (80005bc <GPIO_Init+0x178>)
 8000586:	4293      	cmp	r3, r2
 8000588:	d101      	bne.n	800058e <GPIO_Init+0x14a>
 800058a:	2307      	movs	r3, #7
 800058c:	e019      	b.n	80005c2 <GPIO_Init+0x17e>
 800058e:	2300      	movs	r3, #0
 8000590:	e017      	b.n	80005c2 <GPIO_Init+0x17e>
 8000592:	2304      	movs	r3, #4
 8000594:	e015      	b.n	80005c2 <GPIO_Init+0x17e>
 8000596:	2303      	movs	r3, #3
 8000598:	e013      	b.n	80005c2 <GPIO_Init+0x17e>
 800059a:	2302      	movs	r3, #2
 800059c:	e011      	b.n	80005c2 <GPIO_Init+0x17e>
 800059e:	2301      	movs	r3, #1
 80005a0:	e00f      	b.n	80005c2 <GPIO_Init+0x17e>
 80005a2:	bf00      	nop
 80005a4:	40013c00 	.word	0x40013c00
 80005a8:	40020000 	.word	0x40020000
 80005ac:	40020400 	.word	0x40020400
 80005b0:	40020800 	.word	0x40020800
 80005b4:	40020c00 	.word	0x40020c00
 80005b8:	40021000 	.word	0x40021000
 80005bc:	40021c00 	.word	0x40021c00
 80005c0:	2300      	movs	r3, #0
 80005c2:	747b      	strb	r3, [r7, #17]
			SYSCFG_PCLK_EN();
 80005c4:	4b5d      	ldr	r3, [pc, #372]	; (800073c <GPIO_Init+0x2f8>)
 80005c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005c8:	4a5c      	ldr	r2, [pc, #368]	; (800073c <GPIO_Init+0x2f8>)
 80005ca:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005ce:	6453      	str	r3, [r2, #68]	; 0x44
			SYSCFG->EXTICR[temp1]= portcode<< (temp2 *4);
 80005d0:	7c7a      	ldrb	r2, [r7, #17]
 80005d2:	7cbb      	ldrb	r3, [r7, #18]
 80005d4:	009b      	lsls	r3, r3, #2
 80005d6:	fa02 f103 	lsl.w	r1, r2, r3
 80005da:	4a59      	ldr	r2, [pc, #356]	; (8000740 <GPIO_Init+0x2fc>)
 80005dc:	7cfb      	ldrb	r3, [r7, #19]
 80005de:	3302      	adds	r3, #2
 80005e0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

			//3. Enable the EXTI interrupt delivery using IMR
			EXTI->IMR |= (1<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005e4:	4b57      	ldr	r3, [pc, #348]	; (8000744 <GPIO_Init+0x300>)
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	687a      	ldr	r2, [r7, #4]
 80005ea:	7912      	ldrb	r2, [r2, #4]
 80005ec:	4611      	mov	r1, r2
 80005ee:	2201      	movs	r2, #1
 80005f0:	408a      	lsls	r2, r1
 80005f2:	4611      	mov	r1, r2
 80005f4:	4a53      	ldr	r2, [pc, #332]	; (8000744 <GPIO_Init+0x300>)
 80005f6:	430b      	orrs	r3, r1
 80005f8:	6013      	str	r3, [r2, #0]

		}

		//2. config the speed

		temp=0;
 80005fa:	2300      	movs	r3, #0
 80005fc:	617b      	str	r3, [r7, #20]
		temp= pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	799b      	ldrb	r3, [r3, #6]
 8000602:	461a      	mov	r2, r3
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	791b      	ldrb	r3, [r3, #4]
 8000608:	005b      	lsls	r3, r3, #1
 800060a:	fa02 f303 	lsl.w	r3, r2, r3
 800060e:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(0X3 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	689a      	ldr	r2, [r3, #8]
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	791b      	ldrb	r3, [r3, #4]
 800061a:	4619      	mov	r1, r3
 800061c:	2303      	movs	r3, #3
 800061e:	408b      	lsls	r3, r1
 8000620:	43db      	mvns	r3, r3
 8000622:	4619      	mov	r1, r3
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	400a      	ands	r2, r1
 800062a:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |=temp;
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	6899      	ldr	r1, [r3, #8]
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	697a      	ldr	r2, [r7, #20]
 8000638:	430a      	orrs	r2, r1
 800063a:	609a      	str	r2, [r3, #8]

		temp=0;
 800063c:	2300      	movs	r3, #0
 800063e:	617b      	str	r3, [r7, #20]

		//3. config the pupd settings

		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	79db      	ldrb	r3, [r3, #7]
 8000644:	461a      	mov	r2, r3
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	791b      	ldrb	r3, [r3, #4]
 800064a:	005b      	lsls	r3, r3, #1
 800064c:	fa02 f303 	lsl.w	r3, r2, r3
 8000650:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->PUPDR &= ~(0X3 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	68da      	ldr	r2, [r3, #12]
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	791b      	ldrb	r3, [r3, #4]
 800065c:	4619      	mov	r1, r3
 800065e:	2303      	movs	r3, #3
 8000660:	408b      	lsls	r3, r1
 8000662:	43db      	mvns	r3, r3
 8000664:	4619      	mov	r1, r3
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	400a      	ands	r2, r1
 800066c:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR |=temp;
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	681b      	ldr	r3, [r3, #0]
 8000672:	68d9      	ldr	r1, [r3, #12]
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	697a      	ldr	r2, [r7, #20]
 800067a:	430a      	orrs	r2, r1
 800067c:	60da      	str	r2, [r3, #12]

		temp=0;
 800067e:	2300      	movs	r3, #0
 8000680:	617b      	str	r3, [r7, #20]

		//4.config the optype
		temp =pGPIOHandle->GPIO_PinConfig.GPIO_PinOType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	7a1b      	ldrb	r3, [r3, #8]
 8000686:	461a      	mov	r2, r3
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	791b      	ldrb	r3, [r3, #4]
 800068c:	fa02 f303 	lsl.w	r3, r2, r3
 8000690:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OTYPER&= ~(0X1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	685a      	ldr	r2, [r3, #4]
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	791b      	ldrb	r3, [r3, #4]
 800069c:	4619      	mov	r1, r3
 800069e:	2301      	movs	r3, #1
 80006a0:	408b      	lsls	r3, r1
 80006a2:	43db      	mvns	r3, r3
 80006a4:	4619      	mov	r1, r3
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	400a      	ands	r2, r1
 80006ac:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |=temp;
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	6859      	ldr	r1, [r3, #4]
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	697a      	ldr	r2, [r7, #20]
 80006ba:	430a      	orrs	r2, r1
 80006bc:	605a      	str	r2, [r3, #4]

		temp=0;
 80006be:	2300      	movs	r3, #0
 80006c0:	617b      	str	r3, [r7, #20]


		//5.config the alt funcxfdn

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode== GPIO_MODE_ALTFUN)
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	795b      	ldrb	r3, [r3, #5]
 80006c6:	2b02      	cmp	r3, #2
 80006c8:	d132      	bne.n	8000730 <GPIO_Init+0x2ec>
		{
			//config the alt fun registers

			uint32_t temp1,temp2;

			temp1 =pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber /8;
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	791b      	ldrb	r3, [r3, #4]
 80006ce:	08db      	lsrs	r3, r3, #3
 80006d0:	b2db      	uxtb	r3, r3
 80006d2:	60fb      	str	r3, [r7, #12]
			temp2= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %8;
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	791b      	ldrb	r3, [r3, #4]
 80006d8:	f003 0307 	and.w	r3, r3, #7
 80006dc:	60bb      	str	r3, [r7, #8]
			pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0XF << (4 * temp2));
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	68fa      	ldr	r2, [r7, #12]
 80006e4:	3208      	adds	r2, #8
 80006e6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80006ea:	68bb      	ldr	r3, [r7, #8]
 80006ec:	009b      	lsls	r3, r3, #2
 80006ee:	210f      	movs	r1, #15
 80006f0:	fa01 f303 	lsl.w	r3, r1, r3
 80006f4:	43db      	mvns	r3, r3
 80006f6:	4619      	mov	r1, r3
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	4011      	ands	r1, r2
 80006fe:	68fa      	ldr	r2, [r7, #12]
 8000700:	3208      	adds	r2, #8
 8000702:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

			pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	68fa      	ldr	r2, [r7, #12]
 800070c:	3208      	adds	r2, #8
 800070e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	7a5b      	ldrb	r3, [r3, #9]
 8000716:	4619      	mov	r1, r3
 8000718:	68bb      	ldr	r3, [r7, #8]
 800071a:	009b      	lsls	r3, r3, #2
 800071c:	fa01 f303 	lsl.w	r3, r1, r3
 8000720:	4619      	mov	r1, r3
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	4311      	orrs	r1, r2
 8000728:	68fa      	ldr	r2, [r7, #12]
 800072a:	3208      	adds	r2, #8
 800072c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		}

}
 8000730:	bf00      	nop
 8000732:	371c      	adds	r7, #28
 8000734:	46bd      	mov	sp, r7
 8000736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800073a:	4770      	bx	lr
 800073c:	40023800 	.word	0x40023800
 8000740:	40013800 	.word	0x40013800
 8000744:	40013c00 	.word	0x40013c00

08000748 <GPIO_ToggleOutputPin>:
 *
 *	@Note				- none
 *
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx , uint8_t PinNumber )
{
 8000748:	b480      	push	{r7}
 800074a:	b083      	sub	sp, #12
 800074c:	af00      	add	r7, sp, #0
 800074e:	6078      	str	r0, [r7, #4]
 8000750:	460b      	mov	r3, r1
 8000752:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	695b      	ldr	r3, [r3, #20]
 8000758:	78fa      	ldrb	r2, [r7, #3]
 800075a:	2101      	movs	r1, #1
 800075c:	fa01 f202 	lsl.w	r2, r1, r2
 8000760:	405a      	eors	r2, r3
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	615a      	str	r2, [r3, #20]
}
 8000766:	bf00      	nop
 8000768:	370c      	adds	r7, #12
 800076a:	46bd      	mov	sp, r7
 800076c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000770:	4770      	bx	lr
	...

08000774 <GPIO_IRQInterruptConfig>:
 *
 *	@Note				- Here API is actually the processor specific.
 *
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber , uint8_t EnOrDi )
{
 8000774:	b480      	push	{r7}
 8000776:	b083      	sub	sp, #12
 8000778:	af00      	add	r7, sp, #0
 800077a:	4603      	mov	r3, r0
 800077c:	460a      	mov	r2, r1
 800077e:	71fb      	strb	r3, [r7, #7]
 8000780:	4613      	mov	r3, r2
 8000782:	71bb      	strb	r3, [r7, #6]
	if(EnOrDi == ENABLE)
 8000784:	79bb      	ldrb	r3, [r7, #6]
 8000786:	2b01      	cmp	r3, #1
 8000788:	d133      	bne.n	80007f2 <GPIO_IRQInterruptConfig+0x7e>
		{
			if(IRQNumber <=31)
 800078a:	79fb      	ldrb	r3, [r7, #7]
 800078c:	2b1f      	cmp	r3, #31
 800078e:	d80a      	bhi.n	80007a6 <GPIO_IRQInterruptConfig+0x32>
			{
				//program on ISER0 Register
				*NVIC_ISER0 |= (1<< IRQNumber);
 8000790:	4b35      	ldr	r3, [pc, #212]	; (8000868 <GPIO_IRQInterruptConfig+0xf4>)
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	79fa      	ldrb	r2, [r7, #7]
 8000796:	2101      	movs	r1, #1
 8000798:	fa01 f202 	lsl.w	r2, r1, r2
 800079c:	4611      	mov	r1, r2
 800079e:	4a32      	ldr	r2, [pc, #200]	; (8000868 <GPIO_IRQInterruptConfig+0xf4>)
 80007a0:	430b      	orrs	r3, r1
 80007a2:	6013      	str	r3, [r2, #0]
						*NVIC_ICER2 |= (1<< (IRQNumber%64) );

					}

		}
}
 80007a4:	e059      	b.n	800085a <GPIO_IRQInterruptConfig+0xe6>
			else if(IRQNumber > 31  && IRQNumber <64)
 80007a6:	79fb      	ldrb	r3, [r7, #7]
 80007a8:	2b1f      	cmp	r3, #31
 80007aa:	d90f      	bls.n	80007cc <GPIO_IRQInterruptConfig+0x58>
 80007ac:	79fb      	ldrb	r3, [r7, #7]
 80007ae:	2b3f      	cmp	r3, #63	; 0x3f
 80007b0:	d80c      	bhi.n	80007cc <GPIO_IRQInterruptConfig+0x58>
				*NVIC_ISER1 |= (1<< (IRQNumber%32) );
 80007b2:	4b2e      	ldr	r3, [pc, #184]	; (800086c <GPIO_IRQInterruptConfig+0xf8>)
 80007b4:	681b      	ldr	r3, [r3, #0]
 80007b6:	79fa      	ldrb	r2, [r7, #7]
 80007b8:	f002 021f 	and.w	r2, r2, #31
 80007bc:	2101      	movs	r1, #1
 80007be:	fa01 f202 	lsl.w	r2, r1, r2
 80007c2:	4611      	mov	r1, r2
 80007c4:	4a29      	ldr	r2, [pc, #164]	; (800086c <GPIO_IRQInterruptConfig+0xf8>)
 80007c6:	430b      	orrs	r3, r1
 80007c8:	6013      	str	r3, [r2, #0]
 80007ca:	e046      	b.n	800085a <GPIO_IRQInterruptConfig+0xe6>
			else if(IRQNumber >=64 && IRQNumber <96)
 80007cc:	79fb      	ldrb	r3, [r7, #7]
 80007ce:	2b3f      	cmp	r3, #63	; 0x3f
 80007d0:	d943      	bls.n	800085a <GPIO_IRQInterruptConfig+0xe6>
 80007d2:	79fb      	ldrb	r3, [r7, #7]
 80007d4:	2b5f      	cmp	r3, #95	; 0x5f
 80007d6:	d840      	bhi.n	800085a <GPIO_IRQInterruptConfig+0xe6>
				*NVIC_ISER2 |= (1<< (IRQNumber%64) );
 80007d8:	4b25      	ldr	r3, [pc, #148]	; (8000870 <GPIO_IRQInterruptConfig+0xfc>)
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	79fa      	ldrb	r2, [r7, #7]
 80007de:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007e2:	2101      	movs	r1, #1
 80007e4:	fa01 f202 	lsl.w	r2, r1, r2
 80007e8:	4611      	mov	r1, r2
 80007ea:	4a21      	ldr	r2, [pc, #132]	; (8000870 <GPIO_IRQInterruptConfig+0xfc>)
 80007ec:	430b      	orrs	r3, r1
 80007ee:	6013      	str	r3, [r2, #0]
}
 80007f0:	e033      	b.n	800085a <GPIO_IRQInterruptConfig+0xe6>
					if(IRQNumber <=31)
 80007f2:	79fb      	ldrb	r3, [r7, #7]
 80007f4:	2b1f      	cmp	r3, #31
 80007f6:	d80a      	bhi.n	800080e <GPIO_IRQInterruptConfig+0x9a>
						*NVIC_ICER0 |= (1<< IRQNumber);
 80007f8:	4b1e      	ldr	r3, [pc, #120]	; (8000874 <GPIO_IRQInterruptConfig+0x100>)
 80007fa:	681b      	ldr	r3, [r3, #0]
 80007fc:	79fa      	ldrb	r2, [r7, #7]
 80007fe:	2101      	movs	r1, #1
 8000800:	fa01 f202 	lsl.w	r2, r1, r2
 8000804:	4611      	mov	r1, r2
 8000806:	4a1b      	ldr	r2, [pc, #108]	; (8000874 <GPIO_IRQInterruptConfig+0x100>)
 8000808:	430b      	orrs	r3, r1
 800080a:	6013      	str	r3, [r2, #0]
}
 800080c:	e025      	b.n	800085a <GPIO_IRQInterruptConfig+0xe6>
					else if(IRQNumber > 31  && IRQNumber <64)
 800080e:	79fb      	ldrb	r3, [r7, #7]
 8000810:	2b1f      	cmp	r3, #31
 8000812:	d90f      	bls.n	8000834 <GPIO_IRQInterruptConfig+0xc0>
 8000814:	79fb      	ldrb	r3, [r7, #7]
 8000816:	2b3f      	cmp	r3, #63	; 0x3f
 8000818:	d80c      	bhi.n	8000834 <GPIO_IRQInterruptConfig+0xc0>
						*NVIC_ICER1 |= (1<< (IRQNumber%32) );
 800081a:	4b17      	ldr	r3, [pc, #92]	; (8000878 <GPIO_IRQInterruptConfig+0x104>)
 800081c:	681b      	ldr	r3, [r3, #0]
 800081e:	79fa      	ldrb	r2, [r7, #7]
 8000820:	f002 021f 	and.w	r2, r2, #31
 8000824:	2101      	movs	r1, #1
 8000826:	fa01 f202 	lsl.w	r2, r1, r2
 800082a:	4611      	mov	r1, r2
 800082c:	4a12      	ldr	r2, [pc, #72]	; (8000878 <GPIO_IRQInterruptConfig+0x104>)
 800082e:	430b      	orrs	r3, r1
 8000830:	6013      	str	r3, [r2, #0]
 8000832:	e012      	b.n	800085a <GPIO_IRQInterruptConfig+0xe6>
					else if(IRQNumber >=64 && IRQNumber <96)
 8000834:	79fb      	ldrb	r3, [r7, #7]
 8000836:	2b3f      	cmp	r3, #63	; 0x3f
 8000838:	d90f      	bls.n	800085a <GPIO_IRQInterruptConfig+0xe6>
 800083a:	79fb      	ldrb	r3, [r7, #7]
 800083c:	2b5f      	cmp	r3, #95	; 0x5f
 800083e:	d80c      	bhi.n	800085a <GPIO_IRQInterruptConfig+0xe6>
						*NVIC_ICER2 |= (1<< (IRQNumber%64) );
 8000840:	4b0e      	ldr	r3, [pc, #56]	; (800087c <GPIO_IRQInterruptConfig+0x108>)
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	79fa      	ldrb	r2, [r7, #7]
 8000846:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800084a:	2101      	movs	r1, #1
 800084c:	fa01 f202 	lsl.w	r2, r1, r2
 8000850:	4611      	mov	r1, r2
 8000852:	4a0a      	ldr	r2, [pc, #40]	; (800087c <GPIO_IRQInterruptConfig+0x108>)
 8000854:	430b      	orrs	r3, r1
 8000856:	6013      	str	r3, [r2, #0]
}
 8000858:	e7ff      	b.n	800085a <GPIO_IRQInterruptConfig+0xe6>
 800085a:	bf00      	nop
 800085c:	370c      	adds	r7, #12
 800085e:	46bd      	mov	sp, r7
 8000860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop
 8000868:	e000e100 	.word	0xe000e100
 800086c:	e000e104 	.word	0xe000e104
 8000870:	e000e108 	.word	0xe000e108
 8000874:	e000e180 	.word	0xe000e180
 8000878:	e000e184 	.word	0xe000e184
 800087c:	e000e188 	.word	0xe000e188

08000880 <GPIO_IRQPriorityConfig>:
 *
 *	@Note				- none
 *
 */
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000880:	b480      	push	{r7}
 8000882:	b085      	sub	sp, #20
 8000884:	af00      	add	r7, sp, #0
 8000886:	4603      	mov	r3, r0
 8000888:	6039      	str	r1, [r7, #0]
 800088a:	71fb      	strb	r3, [r7, #7]
	//1. first lets find out the IPR register(49)
	uint8_t iprx = IRQNumber/4;
 800088c:	79fb      	ldrb	r3, [r7, #7]
 800088e:	089b      	lsrs	r3, r3, #2
 8000890:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber%4;
 8000892:	79fb      	ldrb	r3, [r7, #7]
 8000894:	f003 0303 	and.w	r3, r3, #3
 8000898:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTATION);
 800089a:	7bbb      	ldrb	r3, [r7, #14]
 800089c:	00db      	lsls	r3, r3, #3
 800089e:	b2db      	uxtb	r3, r3
 80008a0:	3304      	adds	r3, #4
 80008a2:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx  ) |= ( IRQPriority << shift_amount);
 80008a4:	7bfb      	ldrb	r3, [r7, #15]
 80008a6:	009b      	lsls	r3, r3, #2
 80008a8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80008ac:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80008b0:	6819      	ldr	r1, [r3, #0]
 80008b2:	7b7b      	ldrb	r3, [r7, #13]
 80008b4:	683a      	ldr	r2, [r7, #0]
 80008b6:	409a      	lsls	r2, r3
 80008b8:	7bfb      	ldrb	r3, [r7, #15]
 80008ba:	009b      	lsls	r3, r3, #2
 80008bc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80008c0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80008c4:	430a      	orrs	r2, r1
 80008c6:	601a      	str	r2, [r3, #0]
}
 80008c8:	bf00      	nop
 80008ca:	3714      	adds	r7, #20
 80008cc:	46bd      	mov	sp, r7
 80008ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d2:	4770      	bx	lr

080008d4 <GPIO_IRQHandling>:
 *
 *	@Note				- none
 *
 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 80008d4:	b480      	push	{r7}
 80008d6:	b083      	sub	sp, #12
 80008d8:	af00      	add	r7, sp, #0
 80008da:	4603      	mov	r3, r0
 80008dc:	71fb      	strb	r3, [r7, #7]
	//clear the EXTI PR Register corresponding to the pin number
	if(EXTI->PR & (1 << PinNumber ))
 80008de:	4b0c      	ldr	r3, [pc, #48]	; (8000910 <GPIO_IRQHandling+0x3c>)
 80008e0:	695b      	ldr	r3, [r3, #20]
 80008e2:	79fa      	ldrb	r2, [r7, #7]
 80008e4:	2101      	movs	r1, #1
 80008e6:	fa01 f202 	lsl.w	r2, r1, r2
 80008ea:	4013      	ands	r3, r2
 80008ec:	2b00      	cmp	r3, #0
 80008ee:	d009      	beq.n	8000904 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber );
 80008f0:	4b07      	ldr	r3, [pc, #28]	; (8000910 <GPIO_IRQHandling+0x3c>)
 80008f2:	695b      	ldr	r3, [r3, #20]
 80008f4:	79fa      	ldrb	r2, [r7, #7]
 80008f6:	2101      	movs	r1, #1
 80008f8:	fa01 f202 	lsl.w	r2, r1, r2
 80008fc:	4611      	mov	r1, r2
 80008fe:	4a04      	ldr	r2, [pc, #16]	; (8000910 <GPIO_IRQHandling+0x3c>)
 8000900:	430b      	orrs	r3, r1
 8000902:	6153      	str	r3, [r2, #20]
	}
}
 8000904:	bf00      	nop
 8000906:	370c      	adds	r7, #12
 8000908:	46bd      	mov	sp, r7
 800090a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800090e:	4770      	bx	lr
 8000910:	40013c00 	.word	0x40013c00

08000914 <memset>:
 8000914:	4402      	add	r2, r0
 8000916:	4603      	mov	r3, r0
 8000918:	4293      	cmp	r3, r2
 800091a:	d100      	bne.n	800091e <memset+0xa>
 800091c:	4770      	bx	lr
 800091e:	f803 1b01 	strb.w	r1, [r3], #1
 8000922:	e7f9      	b.n	8000918 <memset+0x4>

08000924 <__libc_init_array>:
 8000924:	b570      	push	{r4, r5, r6, lr}
 8000926:	4d0d      	ldr	r5, [pc, #52]	; (800095c <__libc_init_array+0x38>)
 8000928:	4c0d      	ldr	r4, [pc, #52]	; (8000960 <__libc_init_array+0x3c>)
 800092a:	1b64      	subs	r4, r4, r5
 800092c:	10a4      	asrs	r4, r4, #2
 800092e:	2600      	movs	r6, #0
 8000930:	42a6      	cmp	r6, r4
 8000932:	d109      	bne.n	8000948 <__libc_init_array+0x24>
 8000934:	4d0b      	ldr	r5, [pc, #44]	; (8000964 <__libc_init_array+0x40>)
 8000936:	4c0c      	ldr	r4, [pc, #48]	; (8000968 <__libc_init_array+0x44>)
 8000938:	f000 f818 	bl	800096c <_init>
 800093c:	1b64      	subs	r4, r4, r5
 800093e:	10a4      	asrs	r4, r4, #2
 8000940:	2600      	movs	r6, #0
 8000942:	42a6      	cmp	r6, r4
 8000944:	d105      	bne.n	8000952 <__libc_init_array+0x2e>
 8000946:	bd70      	pop	{r4, r5, r6, pc}
 8000948:	f855 3b04 	ldr.w	r3, [r5], #4
 800094c:	4798      	blx	r3
 800094e:	3601      	adds	r6, #1
 8000950:	e7ee      	b.n	8000930 <__libc_init_array+0xc>
 8000952:	f855 3b04 	ldr.w	r3, [r5], #4
 8000956:	4798      	blx	r3
 8000958:	3601      	adds	r6, #1
 800095a:	e7f2      	b.n	8000942 <__libc_init_array+0x1e>
 800095c:	08000984 	.word	0x08000984
 8000960:	08000984 	.word	0x08000984
 8000964:	08000984 	.word	0x08000984
 8000968:	08000988 	.word	0x08000988

0800096c <_init>:
 800096c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800096e:	bf00      	nop
 8000970:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000972:	bc08      	pop	{r3}
 8000974:	469e      	mov	lr, r3
 8000976:	4770      	bx	lr

08000978 <_fini>:
 8000978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800097a:	bf00      	nop
 800097c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800097e:	bc08      	pop	{r3}
 8000980:	469e      	mov	lr, r3
 8000982:	4770      	bx	lr
